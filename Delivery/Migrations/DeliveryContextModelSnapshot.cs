// <auto-generated />
using System;
using Delivery.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Delivery.Migrations
{
    [DbContext(typeof(DeliveryContext))]
    partial class DeliveryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Delivery.Models.Caixa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FunIdID");

                    b.Property<string>("Motivo");

                    b.Property<bool>("Tipotransacao");

                    b.Property<float>("Valor");

                    b.Property<float>("Valortransacao");

                    b.HasKey("ID");

                    b.HasIndex("FunIdID");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("Delivery.Models.Checkinout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Checkin");

                    b.Property<DateTime>("Cheout");

                    b.Property<int?>("FuncionarioID");

                    b.HasKey("ID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("Checkinout");
                });

            modelBuilder.Entity("Delivery.Models.Estoque", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<float>("Qtde");

                    b.HasKey("ID");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Delivery.Models.Extra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<float>("Preco");

                    b.HasKey("ID");

                    b.ToTable("Extra");
                });

            modelBuilder.Entity("Delivery.Models.Funcionario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contato");

                    b.Property<string>("Funcao");

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Delivery.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Desconto");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<float>("Preco");

                    b.Property<string>("Tamanho");

                    b.HasKey("ID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Delivery.Models.ProdutoExtra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExtIdID");

                    b.Property<float>("Preco_ext");

                    b.Property<float>("Preco_pro");

                    b.Property<int?>("ProIdID");

                    b.Property<int>("Qtde_ext");

                    b.Property<int>("Qtde_pro");

                    b.Property<int?>("VendasID");

                    b.HasKey("ID");

                    b.HasIndex("ExtIdID");

                    b.HasIndex("ProIdID");

                    b.HasIndex("VendasID");

                    b.ToTable("ProdutoExtra");
                });

            modelBuilder.Entity("Delivery.Models.RelatorioEstoque", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<int?>("EstoqueID");

                    b.Property<float>("Qtde");

                    b.Property<bool>("Tipo");

                    b.HasKey("ID");

                    b.HasIndex("EstoqueID");

                    b.ToTable("RelatorioEstoque");
                });

            modelBuilder.Entity("Delivery.Models.Vendas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Complemento");

                    b.Property<DateTime>("Datahora");

                    b.Property<float>("Desconto");

                    b.Property<int?>("FuncionarioID");

                    b.Property<string>("Metodopagamento");

                    b.Property<string>("Numero");

                    b.Property<string>("Rua");

                    b.Property<float>("Total");

                    b.HasKey("ID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Delivery.Models.Caixa", b =>
                {
                    b.HasOne("Delivery.Models.Funcionario", "FunId")
                        .WithMany()
                        .HasForeignKey("FunIdID");
                });

            modelBuilder.Entity("Delivery.Models.Checkinout", b =>
                {
                    b.HasOne("Delivery.Models.Funcionario")
                        .WithMany("Checkinouts")
                        .HasForeignKey("FuncionarioID");
                });

            modelBuilder.Entity("Delivery.Models.ProdutoExtra", b =>
                {
                    b.HasOne("Delivery.Models.Extra", "ExtId")
                        .WithMany()
                        .HasForeignKey("ExtIdID");

                    b.HasOne("Delivery.Models.Produto", "ProId")
                        .WithMany()
                        .HasForeignKey("ProIdID");

                    b.HasOne("Delivery.Models.Vendas")
                        .WithMany("Produtosextras")
                        .HasForeignKey("VendasID");
                });

            modelBuilder.Entity("Delivery.Models.RelatorioEstoque", b =>
                {
                    b.HasOne("Delivery.Models.Estoque")
                        .WithMany("Relatorio")
                        .HasForeignKey("EstoqueID");
                });

            modelBuilder.Entity("Delivery.Models.Vendas", b =>
                {
                    b.HasOne("Delivery.Models.Funcionario")
                        .WithMany("Vendidos")
                        .HasForeignKey("FuncionarioID");
                });
#pragma warning restore 612, 618
        }
    }
}
